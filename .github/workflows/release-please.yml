name: Release Please

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  # Cancel any running workflow for the same branch when new commits are pushed.
  # We group both by ref_name (available when CI is triggered by a push to a branch/tag)
  # and head_ref (available when CI is triggered by a PR).
  group: "release-please-${{ github.ref_name }}-${{ github.head_ref }}"
  cancel-in-progress: true

jobs:
  release-please:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write
    outputs:
      desktop_release_created: ${{ steps.release-please.outputs['desktop_app--release_created'] }}
      mcp_server_docker_image_release_created: ${{ steps.release-please.outputs['mcp_server_docker_image--release_created'] }}
      mcp_server_docker_image_version: ${{ steps.release-please.outputs['mcp_server_docker_image--version'] }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Generate a token
        id: generate-token
        uses: ./.github/actions/generate-release-token
        with:
          app-id: ${{ secrets.ARCHESTRA_RELEASER_GITHUB_APP_ID }}
          private-key: ${{ secrets.ARCHESTRA_RELEASER_GITHUB_APP_PRIVATE_KEY }}

      - uses: googleapis/release-please-action@a02a34c4d625f9be7cb89156071d8567266a2445 # v4.2.0
        id: release-please
        with:
          token: ${{ steps.generate-token.outputs.token }}
          config-file: .github/release-please/release-please-config.json
          manifest-file: .github/release-please/.release-please-manifest.json
          target-branch: main

      - name: Log release-please outputs
        # HACK to get toJson to sorta print the output to the console without failing this job
        continue-on-error: true
        env:
          OUTPUTS: ${{ toJson(steps.release-please.outputs) }}
        run: |
          echo "$OUTPUTS"

  build-desktop-application-and-create-github-release:
    name: Build ${{ matrix.platform }} desktop application and create GitHub release
    runs-on: ${{ matrix.platform }}
    if: needs.release-please.outputs.desktop_release_created
    needs:
      - release-please
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: ubuntu-latest
            args: ""
          - platform: windows-latest
            args: ""
    steps:
      - name: Checkout project
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Generate a token
        id: generate-token
        uses: ./.github/actions/generate-release-token
        with:
          app-id: ${{ secrets.ARCHESTRA_RELEASER_GITHUB_APP_ID }}
          private-key: ${{ secrets.ARCHESTRA_RELEASER_GITHUB_APP_PRIVATE_KEY }}

      - name: Setup environment
        uses: ./.github/actions/setup-env

      # TODO: add Electron Forge steps here

  build-and-push-mcp-server-docker-image:
    name: Build and push MCP Server Docker image
    uses: ./.github/workflows/build-base-mcp-server-docker-image.yml
    if: needs.release-please.outputs.mcp_server_docker_image_release_created
    needs:
      - release-please
    with:
      push_to_gcr: true
      version: ${{ needs.release-please.outputs.mcp_server_docker_image_version }}
    secrets: inherit
