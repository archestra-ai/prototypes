// This file is auto-generated by @hey-api/openapi-ts

export type GetChatApiChatData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/chat/api/chat';
};

export type GetChatApiChatResponses = {
  /**
   * Default Response
   */
  200: unknown;
};

export type PostChatApiChatData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/chat/api/chat';
};

export type PostChatApiChatResponses = {
  /**
   * Default Response
   */
  200: unknown;
};

export type DeleteChatApiChatByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/chat/api/chat/{id}';
};

export type DeleteChatApiChatByIdResponses = {
  /**
   * Default Response
   */
  200: unknown;
};

export type GetChatApiChatByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/chat/api/chat/{id}';
};

export type GetChatApiChatByIdResponses = {
  /**
   * Default Response
   */
  200: unknown;
};

export type PatchChatApiChatByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/chat/api/chat/{id}';
};

export type PatchChatApiChatByIdResponses = {
  /**
   * Default Response
   */
  200: unknown;
};

export type GetExternalMcpClientApiExternalMcpClientData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/externalMcpClient/api/external_mcp_client';
};

export type GetExternalMcpClientApiExternalMcpClientResponses = {
  /**
   * Default Response
   */
  200: unknown;
};

export type GetExternalMcpClientApiExternalMcpClientSupportedData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/externalMcpClient/api/external_mcp_client/supported';
};

export type GetExternalMcpClientApiExternalMcpClientSupportedResponses = {
  /**
   * Default Response
   */
  200: unknown;
};

export type PostExternalMcpClientApiExternalMcpClientConnectData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/externalMcpClient/api/external_mcp_client/connect';
};

export type PostExternalMcpClientApiExternalMcpClientConnectResponses = {
  /**
   * Default Response
   */
  200: unknown;
};

export type DeleteExternalMcpClientApiExternalMcpClientByClientNameDisconnectData = {
  body?: never;
  path: {
    client_name: string;
  };
  query?: never;
  url: '/externalMcpClient/api/external_mcp_client/{client_name}/disconnect';
};

export type DeleteExternalMcpClientApiExternalMcpClientByClientNameDisconnectResponses = {
  /**
   * Default Response
   */
  200: unknown;
};

export type PostLlmApiLlmStreamData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/llm/api/llm/stream';
};

export type PostLlmApiLlmStreamResponses = {
  /**
   * Default Response
   */
  200: unknown;
};

export type GetMcpServerApiMcpServerData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/mcpServer/api/mcp_server';
};

export type GetMcpServerApiMcpServerResponses = {
  /**
   * Default Response
   */
  200: unknown;
};

export type GetMcpServerApiMcpServerCatalogData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/mcpServer/api/mcp_server/catalog';
};

export type GetMcpServerApiMcpServerCatalogResponses = {
  /**
   * Default Response
   */
  200: unknown;
};

export type PostMcpServerApiMcpServerCatalogInstallData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/mcpServer/api/mcp_server/catalog/install';
};

export type PostMcpServerApiMcpServerCatalogInstallResponses = {
  /**
   * Default Response
   */
  200: unknown;
};

export type PostMcpServerApiMcpServerStartOauthData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/mcpServer/api/mcp_server/start_oauth';
};

export type PostMcpServerApiMcpServerStartOauthResponses = {
  /**
   * Default Response
   */
  200: unknown;
};

export type DeleteMcpServerApiMcpServerByMcpServerNameData = {
  body?: never;
  path: {
    mcp_server_name: string;
  };
  query?: never;
  url: '/mcpServer/api/mcp_server/{mcp_server_name}';
};

export type DeleteMcpServerApiMcpServerByMcpServerNameResponses = {
  /**
   * Default Response
   */
  200: unknown;
};

export type ClientOptions = {
  baseUrl: `${string}://${string}` | (string & {});
};
